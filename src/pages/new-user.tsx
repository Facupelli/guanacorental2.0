import { zodResolver } from "@hookform/resolvers/zod";
import Head from "next/head";
import { type Dispatch, type SetStateAction, useEffect, useState } from "react";
import { useForm } from "react-hook-form";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";

import Nav from "@/components/Nav";
import { DialogFooter } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Loader2 } from "lucide-react";
import DialogWithState from "@/components/DialogWithState";

import { api } from "@/utils/api";
import { validationAddress } from "@/lib/validation";

import { type NextPage } from "next";

type NewUserFormData = {
  full_name: string;
  company: string;
  phone: string;
  province: string;
  city: string;
  address_1: string;
  dni_number: string;
  birth_date: string;
  occupation: string;
  student: boolean;
  employee: boolean;
  cuit: string;
  bank: string;
  alias: string;
  cbu: string;
  bussiness_name: string;
  contact_1: string;
  contact_2: string;
  bond_1: string;
  bond_2: string;
};

const NewUserPage: NextPage = () => {
  const { data: session } = useSession();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<NewUserFormData>({
    resolver: zodResolver(validationAddress),
  });

  console.log(errors);

  const { isLoading, mutate } = api.user.createUserAddress.useMutation();

  const [, setShowModal] = useState(false);
  const [showSuccessModal, setShowSuccessModal] = useState(false);

  const onSubmit = (data: NewUserFormData) => {
    if (!session?.user.id) return;
    mutate(
      { ...data, userId: session?.user.id },
      {
        onSuccess: () => {
          console.log("sucess");
          setShowSuccessModal(true);
        },
        onError: (err) => {
          console.log("error", err);
        },
      }
    );
  };

  useEffect(() => {
    setShowModal(true);
  }, []);

  return (
    <>
      <Head>
        <title>Guanaco Rental</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/logo-favicon.ico" />
      </Head>

      <SuccessModal
        showSuccessModal={showSuccessModal}
        setShowSuccessModal={setShowSuccessModal}
      />

      <Nav />

      <main className="min-h-screen bg-app-bg px-6 pt-[70px]">
        <h1 className="mt-12 text-3xl font-bold">Formulario Alta de Cliente</h1>
        {/* <ImportanModal showModal={showModal} setShowModal={setShowModal} /> */}

        <section className="max-w-xl py-10">
          <form onSubmit={handleSubmit(onSubmit)} className="grid gap-6">
            <div>
              <Label htmlFor="fullName">Nombre Completo</Label>
              <Input
                className="bg-white"
                id="fullName"
                type="text"
                placeholder="Jorge González"
                {...register("full_name")}
              />
            </div>

            <div>
              <Label htmlFor="phone">
                Número de celular (código de área + número)
              </Label>
              <Input
                id="phone"
                className="bg-white"
                type="text"
                placeholder="264 7433664"
                {...register("phone")}
              />
            </div>

            <div>
              <Label htmlFor="birthDate">Fecha de nacimiento</Label>
              <Input
                id="birthDate"
                className="bg-white"
                type="date"
                {...register("birth_date")}
              />
            </div>

            <div>
              <Label htmlFor="dni">DNI (sin puntos)</Label>
              <Input
                id="dni"
                className="bg-white"
                type="text"
                placeholder="42345678"
                {...register("dni_number")}
              />
            </div>

            <div>
              <Label htmlFor="address">Domicilio Real</Label>
              <Input
                className="bg-white"
                type="text"
                placeholder="Los Cedros 4325 sur"
                id="address"
                {...register("address_1")}
              />
            </div>

            <div>
              <Label htmlFor="province">Provincia</Label>
              <Input
                id="province"
                className="bg-white"
                type="text"
                placeholder="San Juan"
                {...register("province")}
              />
            </div>

            <div>
              <Label htmlFor="city">Localidad</Label>
              <Input
                id="city"
                className="bg-white"
                type="text"
                placeholder="Rivadavia"
                {...register("city")}
              />
            </div>

            <div>
              <Label htmlFor="ocupation">Ocupación</Label>
              <Input
                id="ocupation"
                className="bg-white"
                type="text"
                {...register("occupation")}
              />
            </div>

            <div>
              <Label htmlFor="company">Empresa</Label>
              <Input
                id="company"
                className="bg-white"
                type="text"
                {...register("company")}
              />
            </div>

            <div>
              <Label htmlFor="cuit">CUIT</Label>
              <Input
                id="cuit"
                className="bg-white"
                type="text"
                {...register("cuit")}
              />
            </div>

            <div>
              <Label htmlFor="razon-social">Razón Social</Label>
              <Input
                id="razon-social"
                className="bg-white"
                type="text"
                {...register("bussiness_name")}
              />
            </div>

            <div className="grid gap-2 ">
              <h2 className="text-xl font-semibold">Contactos Relacionados</h2>
              <div className="grid gap-2">
                <div className="grid grid-cols-3 items-center ">
                  <Label htmlFor="contact_1">Contacto 1</Label>
                  <Input
                    id="contact_1"
                    className="col-span-2 bg-white"
                    type="text"
                    {...register("contact_1")}
                  />
                </div>

                <div className="grid grid-cols-3 items-center ">
                  <Label htmlFor="bond_1">Vínculo 1</Label>
                  <Input
                    id="bond_1"
                    className="col-span-2 bg-white"
                    type="text"
                    {...register("bond_1")}
                  />
                </div>
              </div>

              <div className="grid gap-2">
                <div className="grid grid-cols-3 items-center ">
                  <Label htmlFor="contac_2">Contacto 2</Label>
                  <Input
                    id="contac_2"
                    className="col-span-2 bg-white"
                    type="text"
                    {...register("contact_2")}
                  />
                </div>
                <div className="grid grid-cols-3 items-center ">
                  <Label htmlFor="bond_2">Vínculo 2</Label>
                  <Input
                    id="bond_2"
                    className="col-span-2 bg-white"
                    type="text"
                    {...register("bond_2")}
                  />
                </div>
              </div>
            </div>

            <div className="grid gap-2">
              <h2 className="text-xl font-semibold">
                Datos Cuenta Bancaria / Mercadopago
              </h2>

              <div>
                <Label htmlFor="bank">Banco</Label>
                <Input
                  id="bank"
                  className="bg-white"
                  type="text"
                  {...register("bank")}
                />
              </div>

              <div>
                <Label htmlFor="alias">Alias</Label>
                <Input
                  id="alias"
                  className="bg-white"
                  type="text"
                  {...register("alias")}
                />
              </div>

              <div>
                <Label htmlFor="cbu">CBU/CVU</Label>
                <Input
                  id="cbu"
                  className="bg-white"
                  type="text"
                  {...register("cbu")}
                />
              </div>
            </div>

            <Button
              className="font-semibold"
              type="submit"
              disabled={isLoading}
            >
              {isLoading ? (
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
              ) : (
                "Enviar"
              )}
            </Button>
          </form>
        </section>
      </main>
    </>
  );
};

// type ImportanModalProps = {
//   showModal: boolean;
//   setShowModal: Dispatch<SetStateAction<boolean>>;
// };

// const ImportanModal = ({ showModal, setShowModal }: ImportanModalProps) => {
//   return (
//     <DialogWithState isOpen={showModal} title="AVISO IMPORTANTE">
//       <div className="grid gap-4 py-4">
//         Para poder alquilar equipos es necesario llenar este formulario de alta
//         de cliente. Una vez aprobado (puede demorar hasta 48hs) podras realizar
//         tus reservas a través de la web.
//       </div>
//       <DialogFooter>
//         <Button onClick={() => setShowModal(false)} type="submit">
//           OK
//         </Button>
//       </DialogFooter>
//     </DialogWithState>
//   );
// };

type SuccessModalProps = {
  showSuccessModal: boolean;
  setShowSuccessModal: Dispatch<SetStateAction<boolean>>;
};

const SuccessModal = ({
  showSuccessModal,
  setShowSuccessModal,
}: SuccessModalProps) => {
  const router = useRouter();

  const handleNext = () => {
    void router.push("/");
    setShowSuccessModal(false);
  };

  return (
    <DialogWithState isOpen={showSuccessModal} title="">
      <div className="grid gap-4 py-4">
        El alta fue enviada correctamente. Puede demorar hasta 48hs para
        aprobarla o denegarla. Te notificaremos via email.
      </div>
      <DialogFooter>
        <Button onClick={handleNext} type="submit">
          OK
        </Button>
      </DialogFooter>
    </DialogWithState>
  );
};

export default NewUserPage;
