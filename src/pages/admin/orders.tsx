import { type NextPage } from "next";
import Head from "next/head";

import Nav from "@/components/Nav";
import AdminLayout from "@/components/layout/AdminLayout";
import { api } from "@/utils/api";
import Table from "@/components/ui/Table";
import { Button } from "@/components/ui/button";
import { ChevronDown } from "lucide-react";
import { formatPrice } from "@/lib/utils";
import { STATUS } from "@/lib/magic_strings";

interface StatusStyles {
  [status: string]: string;
}

const AdminOrders: NextPage = () => {
  const { data } = api.order.getOrders.useQuery({ take: 10, skip: 0 });

  if (!data) return <div>404</div>;

  const columns = [
    { title: "N°" },
    { title: "Nombre" },
    { title: "Celular" },
    { title: "DNI" },
    { title: "Retiro" },
    { title: "Devolución" },
    { title: "Estado" },
    { title: "Total" },
    { title: "Remito" },
    { title: "Sucursal" },
  ];

  const statusClass: StatusStyles = {
    [STATUS.PENDING]: "py-1 px-3 bg-yellow-200 rounded-xl text-slate-700",
    [STATUS.TODAY]: "py-1 px-3 bg-blue-200 rounded-xl text-slate-700",
    [STATUS.DELIVERED]: "py-1 px-3 bg-green-200 rounded-xl text-slate-700",
  };

  return (
    <>
      <Head>
        <title>Guanaco Admin | Pedidos</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Nav />

      <main className="">
        <AdminLayout>
          <h1 className="text-lg font-bold">CLIENTES</h1>
          <div className="pt-6">
            <Table headTitles={columns}>
              {data.orders.map((order) => (
                <tr key={order.id} className="text-sm">
                  <td className="py-4">{order.number}</td>
                  <td className="py-4">{order.customer.name}</td>
                  <td className="py-4">{order.customer.address?.phone}</td>
                  <td className="py-4">{order.customer.address?.dni_number}</td>
                  <td className="py-4">
                    {new Date(order.book.start_date).toLocaleDateString()} -{" "}
                    {order.book.pickup_hour}hs
                  </td>
                  <td className="py-4">
                    {new Date(order.book.end_date).toLocaleDateString()}
                  </td>
                  <td className="py-4 text-xs font-bold">
                    <span className={statusClass[order.status]}>
                      {order.status ?? "-"}
                    </span>
                  </td>
                  <td className="py-4">{formatPrice(order.total)}</td>
                  <td className="py-4">
                    <Button className="h-5 text-xs" size="sm">
                      Generar
                    </Button>
                  </td>
                  <td className="py-4">{order.location.name}</td>
                  <td className="py-4">
                    <Button variant="ghost" className="h-6 p-2" size="sm">
                      <ChevronDown className="h-4 w-4" />
                    </Button>
                  </td>
                </tr>
              ))}
            </Table>
          </div>
        </AdminLayout>
      </main>
    </>
  );
};

export default AdminOrders;
