import Head from "next/head";
import Nav from "@/components/Nav";

import { Input } from "@/components/ui/input";
import { NextPage } from "next";
import { useBoundStore } from "@/zustand/store";
import { Button } from "@/components/ui/button";
import SelectDateButton from "@/components/ui/SelectDateButton";
import { formatPrice } from "@/lib/utils";
import { Equipment } from "@/types/models";
import CartItemCounter from "@/components/CartItemCounter";

const CartPage: NextPage = () => {
  const startDate = useBoundStore((state) => state.startDate);
  const endDate = useBoundStore((state) => state.endDate);
  const cartItems = useBoundStore((state) => state.cartItems);
  const location = useBoundStore((state) => state.location);

  return (
    <>
      <Head>
        <title>Guanaco Rental</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/logo-favicon.ico" />
      </Head>

      <Nav />

      <main className="min-h-screen bg-app-bg px-6 pt-[70px]">
        <section className="mt-12 grid grid-cols-12 gap-8">
          <section className="col-span-8 ">
            <div className="grid grid-cols-12 pb-6">
              <p className="col-span-8">Equipos</p>
              <p className="col-span-2">Cantidad</p>
              <p className="col-span-2">Precio</p>
            </div>
            <ItemsList items={cartItems} />
          </section>
          <section className="col-span-4 grid gap-6 ">
            {!startDate || !endDate ? (
              <SelectDateButton />
            ) : (
              <div className="flex justify-between">
                <p>Retiro: {new Date(startDate).toLocaleDateString()}</p>
                <p>Devoluci√≥n: {new Date(endDate).toLocaleDateString()}</p>
              </div>
            )}
            <Button>Continuar Alquilando</Button>

            <textarea
              placeholder="Algo que nos quieras decir?"
              className="p-2 text-sm"
            />

            <div className="flex items-center justify-between">
              <p>sucursal:</p>
              <p>{location}</p>
            </div>

            <div className="flex items-center justify-between">
              <p>Total:</p>
              <p>{formatPrice(1000)}</p>
            </div>

            <div className="grid gap-2">
              <Button disabled={!startDate || !endDate}>Agendar Pedido</Button>
              {/* {(!startDate || !endDate) && (
                <p className="flex justify-center text-sm text-red-500">
                  Selecciona una fecha para alquilar!
                </p>
              )} */}
            </div>
          </section>
        </section>
      </main>
    </>
  );
};

type ItemsListProps = {
  items: Equipment[];
};

const ItemsList = ({ items }: ItemsListProps) => {
  return (
    <div className="grid gap-4">
      {items?.map((item) => (
        <Item key={item.id} item={item} />
      ))}
    </div>
  );
};

type ItemProps = {
  item: Equipment;
};

const Item = ({ item }: ItemProps) => {
  return (
    <div className="grid grid-cols-12">
      <p className="col-span-8">
        <strong>
          {item.name} {item.brand}
        </strong>{" "}
        <strong className="font-medium">{item.model}</strong>
      </p>
      <div className="col-span-2">
        <CartItemCounter item={item} />
      </div>
      <p className="col-span-2">{formatPrice(item.price * item.quantity)}</p>
    </div>
  );
};

export default CartPage;
